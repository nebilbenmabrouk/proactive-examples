<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="Check_For_Signals" projectName="4. Signal Templates" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="SIGNALS" value="stop,continue" model="PA:REGEXP(((\w|-|_)+,?)+)"/>
  </variables>
  <description>
    <![CDATA[ A template workflow that sends a ready notification for all the signals specified in the variable SIGNALS, then loops until one signal among those specified is received by the job (i.e., added to the list of job signals). ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="controls"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-check.png"/>
    <info name="Documentation" value="user/ProActiveUserGuide.html#_loop"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="ready_for_signals" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A template task that sends a ready notification for all the signals specified in the variable SIGNALS. ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-ready.png"/>
        <info name="Documentation" value="user/ProActiveUserGuide.html#_loop"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.base.Splitter;

if (null == variables.get("READY_SENT")){
    
    // Read the variable SIGNALS
    signals = variables.get("SIGNALS")

    // Split the value of the variable SIGNALS and transform it into a list
    signalsList = Splitter.on(',').trimResults().omitEmptyStrings().splitToList(signals)

    // Send a ready notification for each signal in the list
    println("Ready for signals "+ signalsList)
    signalsList.each { 
        signal -> signalapi.readyForSignal(signal)
    }
    
    // Add a variable to avoid sending ready notifications again
    variables.put("READY_SENT", true)
    
    // Add the signals list as a variable to be used by next tasks
    variables.put("SIGNALS_LIST", signalsList)
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
      <metadata>
        <positionTop>
            322.76988220214844
        </positionTop>
        <positionLeft>
            550.1420593261719
        </positionLeft>
      </metadata>
    </task>
    <task name="check_for_signals" 
    
    
    
    
    fork="true">
      <description>
        <![CDATA[ A template task that loops until one signal among those specified in the variable SIGNALS is received by the job (i.e., added to the list of job signals). ]]>
      </description>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/signal-check.png"/>
      </genericInformation>
      <depends>
        <task ref="ready_for_signals"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
//Read the variable SIGNALS_LIST
signalsList =  variables.get("SIGNALS_LIST")

// Check whether one signal among those specified as input is received
println("Checking whether one signal in the list "+ signalsList +" is received")
receivedSignal = signalapi.checkForSignals(signalsList)

// If a signal is received, break the loop, else sleep 10 seconds and restart
if (receivedSignal != null){
    println("Received signal: "+ receivedSignal)
    variables.put("RECEIVED",true)
} else {
    sleep(10000)
}
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="ready_for_signals">
          <script>
            <code language="groovy">
              <![CDATA[
if(variables.get("RECEIVED")) {
    loop = false;
} else {
    loop = true;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            446.7755584716797
        </positionTop>
        <positionLeft>
            550.1420593261719
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2486px;
            height:2810px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-317.76988220214844px;left:-545.1420593261719px"><div class="task block-start ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_354" style="top: 322.77px; left: 550.156px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that sends a ready notification for all the signals specified in the variable SIGNALS."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-ready.png" width="20px">&nbsp;<span class="name">ready_for_signals</span></a></div><div class="task block-end ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_357" style="top: 446.776px; left: 550.156px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A template task that loops until one signal among those specified in the variable SIGNALS is received by the job (i.e., added to the list of job signals)."><img src="/automation-dashboard/styles/patterns/img/wf-icons/signal-check.png" width="20px">&nbsp;<span class="name">check_for_signals</span></a></div><svg style="position:absolute;left:596.5px;top:362.5px" width="21.5" height="84" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0.5 83 C 10.5 33 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.255343,62.650558000000004 L9.57710765467327,42.42593707275087 L2.783363606766371,48.658516138557374 L-4.414934206769355,42.897916465984494 L3.255343,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M3.255343,62.650558000000004 L9.57710765467327,42.42593707275087 L2.783363606766371,48.658516138557374 L-4.414934206769355,42.897916465984494 L3.255343,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:653.5px;top:362.5px" width="22" height="84" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 0 C -10 50 11 33 1 83 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.7169059999999994,20.34944199999999 L5.087999821134014,40.04927563186674 L-2.1494451225064974,34.33793684942944 L-8.900495028295436,40.616736509360244 L-2.7169059999999994,20.34944199999999" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.7169059999999994,20.34944199999999 L5.087999821134014,40.04927563186674 L-2.1494451225064974,34.33793684942944 L-8.900495028295436,40.616736509360244 L-2.7169059999999994,20.34944199999999" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,0.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_368" style="position: absolute; transform: translate(-50%, -50%); left: 664px; top: 404px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 597px; top: 353px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 654px; top: 353px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 597.5px; top: 476px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected" style="position: absolute; height: 20px; width: 20px; left: 597.5px; top: 436px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 655px; top: 436px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>